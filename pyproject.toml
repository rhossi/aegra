[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aegra"
version = "0.1.0"
description = "Open source LangGraph Platform alternative - Self-hosted AI agent backend with FastAPI and PostgreSQL. Zero vendor lock-in, full control over your agent infrastructure."
readme = "README.md"
requires-python = ">=3.11"
keywords = ["langgraph", "ai-agents", "self-hosted", "agent-backend", "fastapi", "postgresql", "langchain", "agent-protocol"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
authors = [
    {name = "Muhammad Ibrahim", email = "mibrahim37612@gmail.com"}
]
maintainers = [
    {name = "Muhammad Ibrahim", email = "mibrahim37612@gmail.com"}
]
dependencies = [
    "alembic>=1.16.4",
    "asyncpg>=0.30.0",
    "fastapi>=0.116.1",
    "greenlet>=3.2.3",
    "langchain-openai>=0.3.28",
    "langgraph>=0.6.0",
    "langchain>=0.3.0",
    "langgraph-checkpoint-postgres>=2.0.23",
    "psycopg[binary]>=3.2.9",
    "pydantic>=2.11.7",
    "pyjwt>=2.10.1",
    "python-dotenv>=1.1.1",
    "sqlalchemy>=2.0.0",
    "uvicorn>=0.35.0",
    "langfuse>=3.3.4",
    "langchain-community>=0.3.31",
    "chromadb>=1.1.1",
]

[project.urls]
Homepage = "https://github.com/ibbybuilds/aegra"
Repository = "https://github.com/ibbybuilds/aegra"
Documentation = "https://github.com/ibbybuilds/aegra#readme"
"Bug Tracker" = "https://github.com/ibbybuilds/aegra/issues"
"Feature Requests" = "https://github.com/ibbybuilds/aegra/issues"



[tool.hatch.build.targets.wheel]
packages = ["src/agent_server"]

[tool.hatch.build.targets.wheel.sources]
"graphs/react_agent" = "react_agent"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "ARG",   # flake8-unused-arguments
    "SIM",   # flake8-simplify
    "TCH",   # flake8-type-checking
    "PTH",   # flake8-use-pathlib
    "ERA",   # eradicate (commented-out code)
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults (FastAPI Depends)
    "UP007", # use X | Y for type annotations (keep Optional for clarity)
    "UP038", # use X | Y in isinstance (causes issues in some contexts)
    "TC002", # type-checking imports cause issues with SQLAlchemy, Pydantic, etc.
    "TC003", # type-checking imports cause issues with SQLAlchemy, Pydantic, etc.
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "ARG",   # unused arguments in tests are common
    "S101",  # assert statements are expected in tests
]
"alembic/**/*.py" = [
    "ERA",   # commented code in migrations is intentional
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
markers = [
    "e2e: marks tests as end-to-end tests",
]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "alembic"]
skips = ["B101"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*", "*/alembic/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[dependency-groups]
dev = [
    "ruff>=0.8.4",
    "langgraph-sdk==0.2.4",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pre-commit>=4.0.0",
    "bandit[toml]>=1.8.0",
]
